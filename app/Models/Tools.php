<?php

/**
 * Clevada - Content Management System and Website Builder
 *
 * Copyright (C) 2024  Chimilevschi Iosif Gabriel, https://clevada.com.
 *
 * LICENSE:
 * Clevada is licensed under the GNU General Public License v3.0
 * Permissions of this strong copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.
 *    
 * @copyright   Copyright (c) 2021, Chimilevschi Iosif Gabriel, https://clevada.com.
 * @license     https://opensource.org/licenses/GPL-3.0  GPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <contact@clevada.com>
 * 
 * 
 * IMPORTANT: DO NOT edit this file manually. All changes will be lost after software update.
 */

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Tools extends Model
{

    /**
     * Generate custom routes
     *
     * @return null
     */
    public static function generatePermalinks()
    {
        $file = 'custom/routes.xml';
        $fp = fopen($file, 'w');

        $data_header = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<routes>\n";
        fwrite($fp, $data_header);


        foreach (SysLang::getLangs() as $lang) {
            $permalinks = unserialize($lang->permalinks);

            // POSTS routes			
            $route_posts = $permalinks['posts'] ?? 'posts';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
			<lang>$route_lang</lang>
			<name>posts</name>		
			<value>$route_posts</value>
			</route>";
            fwrite($fp, $data_route);

            // DOCS routes
            $route_docs = $permalinks['docs'] ?? 'docs';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
			<lang>$route_lang</lang>
			<name>docs</name>		
			<value>$route_docs</value>
			</route>";
            fwrite($fp, $data_route);

            // FORUM routes
            $route_forum = $permalinks['forum'] ?? 'forum';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
			<lang>$route_lang</lang>
			<name>forum</name>		
			<value>$route_forum</value>
			</route>";
            fwrite($fp, $data_route);

            // CONTACT 
            $route_profile = $permalinks['contact'] ?? 'contact';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
			<lang>$route_lang</lang>
			<name>contact</name>		
			<value>$route_profile</value>
			</route>";
            fwrite($fp, $data_route);

            // SEARCH 
            $route_search = $permalinks['search'] ?? 'search';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
			<lang>$route_lang</lang>
			<name>search</name>		
			<value>$route_search</value>
			</route>";
            fwrite($fp, $data_route);

            // PROFILE 
            $route_profile = $permalinks['profile'] ?? 'profile';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
             <lang>$route_lang</lang>
             <name>profile</name>		
             <value>$route_profile</value>
             </route>";
            fwrite($fp, $data_route);

            // TAG 
            $route_tag = $permalinks['tag'] ?? 'tag';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
			<lang>$route_lang</lang>
			<name>tag</name>		
			<value>$route_tag</value>
			</route>";
            fwrite($fp, $data_route);

            // CART 
            $route_cart = $permalinks['cart'] ?? 'shop';
            if ($lang->is_default == 1) $route_lang = 'default';
            else $route_lang = $lang->code;
            $data_route = "<route>
             <lang>$route_lang</lang>
             <name>cart</name>		
             <value>$route_cart</value>
             </route>";
            fwrite($fp, $data_route);
        }

        $data_footer = "</routes>";
        fwrite($fp, $data_footer);

        fclose($fp);

        return null;
    }



    /**
     * Generate sitemap
     *
     * @return null
     */
    public static function generateSitemap()
    {

        header('Content-type: application/xml');

        $file_xml = 'sitemap.xml';

        $fp = fopen($file_xml, 'w');

        $data_header = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">";
        fwrite($fp, $data_header);

        // First page
        $data = "\n
			<url>
				<loc>" . route('home') . "</loc>
				<changefreq>daily</changefreq>
				<priority>1</priority>
			</url>";
        fwrite($fp, $data);

        // pages
        /*
        $pages = Page::where('active', 1)->whereNull('deleted_at')->orderByDesc('id')->get();
        foreach ($pages as $page) {
            $data = "\n
				<url>
					<loc>" . $page->url . "</loc>
					<changefreq>monthly</changefreq>
					<priority>0.8</priority>
				</url>";
            fwrite($fp, $data);
        }
        
        // posts categories
        $posts_categories = PostCateg::where('active', 1)->orderByDesc('id')->get();
        foreach ($posts_categories as $posts_categ) {
            $data = "\n
					<url>
						<loc>" . route('posts.categ', ['categ_slug' => $posts_categ->slug]) . "</loc>
						<changefreq>weekly</changefreq>
						<priority>0.8</priority>
					</url>";
            fwrite($fp, $data);
        }
        */

        // posts
        $posts = Post::where('status', 'published')->whereNull('deleted_at')->orderByDesc('id')->get();
        foreach ($posts as $post) {
            $data = "\n
					<url>
						<loc>" . route('post', ['slug' => $post->slug, 'categ_slug' => $post->category->slug]) . "</loc>
						<changefreq>weekly</changefreq>
						<priority>0.7</priority>
					</url>";
            fwrite($fp, $data);
        }

        /*
        // posts tags
        $tags = PostTag::orderBy('tag')->get();
        foreach ($tags as $tag) {
            $data = "\n
                      <url>
                          <loc>" . route('posts.tag', ['slug' => $tag->slug]) . "</loc>
                          <changefreq>weekly</changefreq>
                          <priority>0.7</priority>
                      </url>";
            fwrite($fp, $data);
        }
        */

        // posts authors profile page
        $authors = User::whereIn('role', ['author', 'contributor', 'editor'])->whereNull('deleted_at')->orderBy('username')->get();
        foreach ($authors as $author) {
            $data = "\n
                       <url>
                           <loc>" . route('profile', ['username' => $author->username]) . "</loc>
                           <changefreq>weekly</changefreq>
                           <priority>0.7</priority>
                       </url>";
            fwrite($fp, $data);
        }

        $data_footer = "\n</urlset>";
        fwrite($fp, $data_footer);
        fclose($fp);

        SysConfig::update_config('sitemap_last_update_at', now());

        return null;
    }
}
